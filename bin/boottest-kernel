#!/bin/bash

temp=$(mktemp -d)
trap 'rm -rf "$temp"' EXIT
mkdir "$temp/seen"

add_file()
{
	local src=$1 dst=$2

	if test -e "$temp/seen/$dst"; then
		continue
	fi
	dirs=($(echo "$dst" |  sed -rn ':a; s:/[^/]+$::p; ta' | tac))
	for dir in "${dirs[@]}"; do
		if test -d "$temp/seen/$dir"; then
			continue
		fi
		echo "dir $dir 0755 0 0" >>"$temp/list"
		mkdir "$temp/seen/$dir"
	done
	echo "file $dst $src 0755 0 0" >>"$temp/list"
	touch "$temp/seen/$dst"
}
add_files()
{
	while test $# -gt 0; do
		local file=$1
		shift
		add_file "$file" "$file"
		set -- "$@" $(ldd "$file" 2>/dev/null | \
			sed -ne 's:\t\(.* => \)\?\(/.*\) (0x[0-9a-f]*):\2:p' | \
			sort -u)
	done
}

set -e

if test -n "$1"; then
	cd "$1"
fi

add_files /bin/bash

MARKER="It WoRkS"
cat >"$temp/init" <<-EOF
	#!/bin/bash

	echo
	echo $MARKER
	echo
	poweroff
EOF
add_file "$temp/init" "/init"
cat >"$temp/poweroff.c" <<-EOF
	#include <unistd.h>
	#include <sys/reboot.h>

	int main(int argc, char **argv)
	{
		reboot(RB_POWER_OFF);
		return 0;
	}
EOF
gcc -Wall -o "$temp/poweroff" "$temp/poweroff.c"
add_file "$temp/poweroff" "/bin/poweroff"
usr/gen_init_cpio "$temp/list" >"$temp/cpio"
qemu_cmd=(qemu-system-x86_64 -nographic -kernel arch/x86_64/boot/bzImage
	-initrd "$temp/cpio" -append 'console=ttyS0')
echo "$PS4${qemu_cmd[@]}"
timeout=30
err=0
timeout --foreground --kill-after=10 "$timeout" "${qemu_cmd[@]}" \
	&>"$temp/log" || err=$?
if test $err -ne 0; then
	cat "$temp/log"
	exit $err
fi
if ! grep -q "$MARKER" "$temp/log"; then
	cat "$temp/log"
	echo "Initrd marker missing"
	exit 1
fi
